import os
import psycopg2
from urllib.parse import urlparse
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

def update_schema():
    """Update database schema with required tables."""
    try:
        # Get database connection
        db_url = urlparse(os.getenv('dbpoolrconnxn'))
        conn = psycopg2.connect(
            dbname=db_url.path[1:],
            user=db_url.username,
            password=db_url.password,
            host=db_url.hostname,
            port=db_url.port
        )
        
        cur = conn.cursor()
        
        # Create chats table if not exists
        cur.execute("""
            CREATE TABLE IF NOT EXISTS chats (
                id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                advisor_id bigint NOT NULL REFERENCES advisors(id),
                created_at timestamp with time zone NOT NULL DEFAULT now(),
                updated_at timestamp with time zone NOT NULL DEFAULT now()
            );
        """)
        
        # Create chat_messages table if not exists
        cur.execute("""
            CREATE TABLE IF NOT EXISTS chat_messages (
                id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                chat_id bigint NOT NULL REFERENCES chats(id),
                sequence integer NOT NULL,
                role text NOT NULL,
                content text,
                tool_name text,
                tool_call_id text,
                created_at timestamp with time zone NOT NULL DEFAULT now(),
                updated_at timestamp with time zone NOT NULL DEFAULT now()
            );
        """)
        
        # Create message_tool_calls table if not exists
        cur.execute("""
            CREATE TABLE IF NOT EXISTS message_tool_calls (
                id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                message_id bigint NOT NULL REFERENCES chat_messages(id),
                tool_call_id text NOT NULL,
                tool_name text NOT NULL,
                arguments jsonb NOT NULL,
                created_at timestamp with time zone NOT NULL DEFAULT now(),
                updated_at timestamp with time zone NOT NULL DEFAULT now()
            );
        """)
        
        # Add indexes
        cur.execute("""
            CREATE INDEX IF NOT EXISTS idx_chat_messages_chat_id ON chat_messages(chat_id);
            CREATE INDEX IF NOT EXISTS idx_chat_messages_sequence ON chat_messages(sequence);
            CREATE INDEX IF NOT EXISTS idx_message_tool_calls_message_id ON message_tool_calls(message_id);
        """)
        
        # Commit changes
        conn.commit()
        print("Schema updated successfully!")
        
        cur.close()
        conn.close()
                
    except Exception as e:
        print(f"Schema update failed: {str(e)}")

if __name__ == "__main__":
    update_schema() 